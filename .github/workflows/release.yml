name: Release Plugins

on:
  push:
    tags:
      - 'v*.*.*'
      - 'v*'
    paths-ignore:
      - 'README.md'
      - 'wiki/**'
      - 'public/**'
      - 'scripts/**'
      - '.vscode'
      - '.idea'
  pull_request:
    branches:
      - master
      - main
    paths-ignore:
      - 'README.md'
      - 'wiki/**'
      - 'public/**'
      - '.scripts/**'
      - '.vscode'
      - '.idea'

concurrency:
  group: release-ci-group
  cancel-in-progress: true

jobs:
  Plugins:
    permissions:
        contents: write
        pages: write
        id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 'latest'
          run_install: false

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.pnpm-store
            ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: pnpm install

      - name: TS Type check
        run: pnpm exec tsc --noEmit
      - name: TS Lint check
        run: pnpm exec eslint .
      - name: Run tests
        run: pnpm run test

      # Build Rust
      - name: Install Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install Rust WASM toolchain
        run: rustup target add wasm32-unknown-unknown && cargo install -f wasm-bindgen-cli --version 0.2.92

      - name: Build example game WASM
        run: pnpm run build:game

      # Build TS
      - name: Build Plugins
        run: pnpm run build

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            dist/*.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
