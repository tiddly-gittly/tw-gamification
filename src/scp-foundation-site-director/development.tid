title: $:/plugins/linonetwo/scp-foundation-site-director/development
type: text/vnd.tiddlywiki

!! Dev env

Install rust by [ext[https://rustup.rs/]], then

```sh
rustup target add wasm32-unknown-unknown
cargo install wasm-bindgen-cli
```

!! Try

This will run the game in window mode. But without the wiki adaptor, it can not load any gameplay data.

```sh
cargo run
```

This will let you know if you have done anything wrong. For example, you must open the `game` folder in vscode, not the root folder.

!! Dev in web

```sh
cargo build --release --target wasm32-unknown-unknown
wasm-bindgen --omit-default-module-path --reference-types --weak-refs --out-name game --out-dir wasm --target web target/wasm32-unknown-unknown/release/game.wasm --debug
```

The first command will build the example for the wasm target, creating a binary. Then, [[wasm-bindgen-cli|https://rustwasm.github.io/wasm-bindgen/reference/cli.html]] is used to create javascript bindings to this wasm file in the output file `src/scp-foundation-site-director/game/wasm/target/game.js`, which can be loaded using HTML file.

Then serve examples/wasm directory to browser. i.e.
