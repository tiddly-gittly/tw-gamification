title: language/zh-Hans/Dataflow

<$whiteboard tiddler="DataflowGraph" readonly="yes" zoomToFit="yes" width="100%" height="500px" />

# 知识库的变化被标准化为几种预定义的类型
## 所以任何知识库中的操作都可以被游戏用起来
## 而且游戏不需要知道知识库中的隐私和操作的细节
## 其他插件可以直接创建这些类型的事件
## 类型为[[待用事件的类型|TypesOfGamificationEvents]]
## 我们提供了一个默认的事件生成器来处理 TODO、日历、日志和常见的日常编辑操作，这也是为插件开发者提供的一个范例
## 事件生成器会用私钥签署带有时间戳的事件（形成可验证凭证），这样系统就能验证该事件是由插件生成的（而不是手打的）
## 监听 tw-events 的全局模块将处理该事件，并将其写入事件日志条目
# 事件存储在设备专用的事件日志条目中
## 意思是每个设备都有自己的日志文件，以防止多端同步时文件冲突
## 该文件是一个队列，在游戏启动时由游戏处理
## 文件未加密，但由于有可验证凭证，手动编辑的结果将被系统无视
# 打开游戏布局时，游戏启动器部件将创建一个适配器来处理对知识库的输入输出
## 知识库向适配器输入的是所有事件日志文件，这些文件上的事件将被取出并提供给游戏
## 当游戏状态发生变化时，它也会将游戏状态存储为私钥签名的存档文件（通过组合多个可验证凭证，保存各部分的状态）
## 此外游戏的玩法数据和图片等资产也都存在于太微插件里，所以游戏需要适配器去加载玩法数据和资产
